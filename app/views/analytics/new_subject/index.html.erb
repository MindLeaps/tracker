<%
  def clean_skill_name(skill)
    replacements = { '-' => '', '&' => 'and', ' ' => ''}
    skill.gsub(Regexp.union(replacements.keys), replacements)
  end

  @skills = @subject_series.map { |s| {
    skillName: s[:skill],
    downloadText: "Download #{s[:skill]} Chart",
    chartId: "#{clean_skill_name(s[:skill].downcase)}Chart",
    buttonId: "#{clean_skill_name(s[:skill].downcase)}Button",
    class: "is-#{clean_skill_name(s[:skill].downcase)}",
    series: s[:series],
    cleanSkillName: clean_skill_name(s[:skill].downcase),
    skillAverage: s[:skill_average]
  }}
%>

<% content_for :title, t(:subject_analytics).capitalize %>
<div class="w-full h-full bg-white p-6">
  <h1 class="text-center text-2xl font-bold mb-6">Subject Analytics</h1>

  <div class="w-full flex gap-4 my-4">
    <div class="w-full rounded-md bg-white px-4 py-2 shadow border border-2 border-gray-400">
      <dt class="text-lg font-medium text-gray-500"><%= t(:average) %></dt>
      <dd id="averageMark" class="mt-1 text-2xl font-semibold text-gray-900 text-right">
        No scores yet
      </dd>
    </div>

    <div class="w-full rounded-md bg-white px-4 py-2 shadow border border-2 border-gray-400">
      <dt class="text-lg font-medium text-gray-500"><%= t(:highest_rated_skill) %></dt>
      <dd class="mt-1 text-2xl font-semibold text-gray-900 text-right">
        <%= @highest_rated_skill || 'No scores yet' %>
      </dd>
    </div>
  </div>

  <div class="w-full min-h-10xl flex justify-between gap-24">
    <div id="chartContainer" class="relative w-full max-w-10xl border border-2 border-gray-400 rounded-md shadow h-fit">
      <% if @subject_series.length.positive? %>
        <% if @skills.all? {|s| s[:series].length == 1 } %>
          <canvas id="skillChart" class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-full h-full transition-all duration-200"></canvas>
        <% else %>
          <% @skills.each do |s| %>
            <canvas id="<%= s[:chartId] %>" class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-full h-full transition-all duration-200"></canvas>
          <% end %>
        <% end %>
        <div id="chartControls" class="w-full absolute -bottom-20 left-1/2 -translate-x-1/2 flex justify-center">
          <% if @skills.all? {|s| s[:series].length == 1 } %>
            <%= render CommonComponents::ButtonComponent.new(label: 'Download Chart', options: { 'id' => 'skillDownloadLink' })%>
          <% else %>
            <% @skills.each do |s| %>
            <div id="<%= s[:buttonId] %>" class="normal-button"><%= s[:skillName] %></div>
            <% end %>
          <% end %>
        </div>
      <% else %>
        <h3 class="text-center text-2xl text-gray-700">No Data to be shown</h3>
      <% end %>
    </div>

    <div class="w-1/2 max-w-3xl flex-col" data-controller="analytics-filter">
      <div class="mb-2">
        <%= label_tag :organization_label, t(:organization), class: 'block text-2xl text-right font-medium text-gray-700' %>
        <%= select_tag :organization_select, options_from_collection_for_select(@available_organizations, :id, :organization_name, @selected_organization_id), :class => 'mt-4 block w-full text-xl shadow border-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 rounded-md', :prompt => 'All', 'data-analytics-filter-target' => 'select', 'data-action' => 'analytics-filter#updateFilter', 'data-name' => 'organization_id', 'data-dependents' => ['chapter_id'].to_json, 'data-resources' => @available_organizations.map { |o| { id: o.id, label: o.organization_name} }.to_json %>
      </div>
      <div class="my-2">
        <%= label_tag :chapter_label, t(:chapter), class: 'block text-2xl text-right font-medium text-gray-700' %>
        <%= select_tag :chapter_select, options_from_collection_for_select(@available_chapters, :id, :chapter_name, @selected_chapter_id), :class => 'mt-4 block w-full text-xl shadow border-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500rounded-md', :prompt => 'All', 'data-analytics-filter-target' => 'select', 'data-action' => 'analytics-filter#updateFilter', 'data-name' => 'chapter_id', 'data-dependents' => ['group_id'].to_json, 'data-resources' => @available_chapters.map { |c| { id: c.id, label: c.chapter_name, depend_id: c.organization_id } }.to_json %>
      </div>
      <div class="my-2">
        <%= label_tag :group_label, t(:group), class: 'block text-2xl text-right font-medium text-gray-700' %>
        <%= select_tag :group_select, options_from_collection_for_select(@available_groups, :id, :group_name, @selected_group_id), :class => 'mt-4 block w-full text-xl shadow border-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 rounded-md', :prompt => 'All', 'data-analytics-filter-target' => 'select', 'data-action' => 'analytics-filter#updateFilter', 'data-name' => 'group_id', 'data-dependents' => ['student_id'].to_json, 'data-resources' => @available_groups.map { |g| { id: g.id, label: g.group_name, depend_id: g.chapter_id } }.to_json %>
      </div>
      <div class="my-2">
        <%= label_tag :subject_label, "Subject", class: 'block text-2xl text-right font-medium text-gray-700' %>
        <%= select_tag :subject_select, options_from_collection_for_select(@available_subjects, :id, :subject_name, @subject), :class => 'mt-4 block w-full text-xl shadow border-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 rounded-md', :prompt => 'All', 'data-analytics-filter-target' => 'select', 'data-action' => 'analytics-filter#updateFilter', 'data-name' => 'subject_id', 'data-resources' => @available_subjects.map { |s| { id: s.id, label: s.subject_name, depend_id: s.organization_id } }.to_json %>
      </div>
      <div class="my-2">
        <%= label_tag :student_label, t(:student), class: 'block text-2xl text-right font-medium text-gray-700' %>
        <%= select_tag :student_select, options_from_collection_for_select(@available_students, :id, :proper_name, @selected_student_id), :class => 'mt-4 block w-full text-xl shadow border-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 rounded-md', :prompt => 'All', 'data-analytics-filter-target' => 'select', 'data-action' => 'analytics-filter#updateFilter', 'data-name' => 'student_id', 'data-resources' => @available_students.map { |s| { id: s.id, label: s.proper_name, depend_id: s.group_id } }.to_json %>
      </div>
      <div class="my-4">
        <div class="flex justify-between w-full">
          <%= render Datepicker.new(date: Date.new(Date.current.year - 1, 1, 1).to_s, target: 'from') do |d| %>
            <%= d.with_input_field do %>
              <div>
                <%= label_tag :from, t(:from), class: 'block text-2xl text-left font-medium text-gray-700' %>
                <input id="from" data-name="from" data-action="blur->analytics-filter#updateFilter" data-analytics-filter-target="date" value="<%= @from || Date.new(Date.current.year - 1, 1, 1).to_s %>" data-datepicker-target="picker" class="mt-4 w-full text-xl shadow border-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 rounded-md" >
              </div>
            <% end %>
          <% end %>
          <%= render Datepicker.new(date: Time.zone.today.to_s, target: 'to') do |d| %>
            <%= d.with_input_field do %>
              <div>
                <%= label_tag :to, t(:to), class: 'block text-2xl text-right font-medium text-gray-700' %>
                <input id="to" data-name="to" data-action="blur->analytics-filter#updateFilter" data-analytics-filter-target="date" value="<%= @to || Time.zone.today.to_s %>" data-datepicker-target="picker" class="mt-4 w-full text-xl shadow border-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 rounded-md" >
              </div>
            <% end %>
          <% end %>
        </div>
      </div>
      <div class="flex justify-between gap-4 mt-6">
        <%= render CommonComponents::ButtonComponent.new(label: t(:filter), options: { 'data-analytics-filter-target' => 'anchor', 'data' => { turbo: false }, class: '!text-xl normal-button w-full justify-center !m-0' })%>
      </div>
    </div>
  </div>
</div>
<script>
    const setAverageMark = (average) => {
      document.getElementById('averageMark').textContent = Math.round(average * 100) / 100 || 'No scores yet'
    }

    const addEventListeners = (skills) => {
        skills.forEach(s => {
            let skillButton = document.getElementById(s.buttonId)

            skillButton.addEventListener('click', () => {
                skills.map(s => s.chartId).forEach(id => {
                  let chart = document.getElementById(id)
                  let skillClicked = skillButton.id.split('Button')[0];

                  chart.classList.add('opacity-0')

                  if(chart.id.includes(skillClicked)) chart.classList.remove('opacity-0')

                  setAverageMark(s.skillAverage)
                })
            })
        })
    }

    const onChartsLoad = () => {
        let skills = <%= @skills.to_json.html_safe %>;
        let series = <%= @subject_series.to_json.html_safe %>;

        console.log(series)

        if(skills.length > 0)
        {
          // Single student is being viewed
          if(skills.every(s => s.series.length === 1)) {
            let studentName = skills[0].series[0].name
            let skillSeriesForStudent = skills.map(s => s.series[0])

            generateStudentSkillChart && generateStudentSkillChart(skillSeriesForStudent, 'skillChart', studentName)
          } else {
            skills.forEach(s => { generateSkillChart && generateSkillChart(s.series, s.chartId, s.skillName) })
          }
          addEventListeners(skills)
          setAverageMark(skills[skills.length - 1].skillAverage)
        }
    }
</script>
<%= javascript_include_tag 'newCharts', onload: 'onChartsLoad()' %>