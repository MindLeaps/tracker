- content_for :title, t(:general_analytics)

= content_for :head_content
  = javascript_include_tag 'analytics'

= content_for :header_content do
  = render partial: '/shared/header_content', locals: { title: 'General Analytics' }

= render '/shared/analytics_tabs'

.filter-wrap data-controller="analytics-filter"
  table
    tr
      td style="padding-right: 20px;"
        = label_tag :organization_label, "Organization"
        = select_tag :organization_select, options_from_collection_for_select(@available_organizations, :id, :organization_name, @selected_organization_id), :prompt => 'All', 'data-analytics-filter-target' => 'select', 'data-action' => 'analytics-filter#updateFilter', 'data-name' => 'organization_id', 'data-dependents' => ['chapter_id'].to_json, 'data-resources' => @available_organizations.map { |o| { id: o.id, label: o.organization_name} }.to_json
      td style="padding-right: 20px;"
        = label_tag :chapter_label, "Chapter"
        = select_tag :chapter_select, options_from_collection_for_select(@available_chapters, :id, :chapter_name, @selected_chapter_id), :prompt => 'All', 'data-analytics-filter-target' => 'select', 'data-action' => 'analytics-filter#updateFilter', 'data-name' => 'chapter_id', 'data-dependents' => ['group_id'].to_json, 'data-resources' => @available_chapters.map { |c| { id: c.id, label: c.chapter_name, depend_id: c.organization_id } }.to_json
      td style="padding-right: 20px;"
        = label_tag :group_label, "Group"
        = select_tag :group_select, options_from_collection_for_select(@available_groups, :id, :group_name, @selected_group_id), :prompt => 'All', 'data-analytics-filter-target' => 'select', 'data-action' => 'analytics-filter#updateFilter', 'data-name' => 'group_id', 'data-dependents' => ['student_id'].to_json, 'data-resources' => @available_groups.map { |g| { id: g.id, label: g.group_name, depend_id: g.chapter_id } }.to_json
      td style="padding-right: 20px;"
        = label_tag :student_label, "Student"
        = select_tag :student_select, options_from_collection_for_select(@available_students, :id, :proper_name, @selected_student_id), :prompt => 'All', 'data-analytics-filter-target' => 'select', 'data-action' => 'analytics-filter#updateFilter', 'data-name' => 'student_id', 'data-resources' => @available_students.map { |s| { id: s.id, label: s.proper_name, depend_id: s.group_id } }.to_json
      td style="padding-right: 20px;"
        a.mdl-button.mdl-js-button.mdl-button--raised.mdl-button--accent.mdl-js-ripple-effect data-analytics-filter-target="anchor"
          = t(:filter)

table style="width: 100%; table-layout: fixed;"
  tr
    td style="width: 50%;"
      div id="quantity-of-data-per-month" style="width:100%; height:400px;"
    td style="width: 50%;"
      div id="histogram-of-student-performance" style="width:100%; height:400px;"
  tr
    td style="width: 50%;"
      div id="performance-change-by-student" style="width:100%; height:400px;"
    td style="width: 50%;"
      div id="performance-change-by-gender" style="width:100%; height:400px;"
  tr
    td style="width: 50%;"
      div id="average-performance-per-group" style="width:100%; height:400px;"
    td style="width: 50%;"
      div id="datapoint-count" class="analytics-counter" style="width:100%; height:400px;"
        .analytics-counter-title = t(:number_of_datapoints)
        div.analytics-count
          span
            = number_with_delimiter Grade.where(student: @selected_students.select(:id)).count

= render '/shared/analytics_common'

javascript:
  function startAnalytics() {
      Highcharts.chart('quantity-of-data-per-month', {
          chart: {
              type: 'column',
              zoomType: 'x'
          },
          legend: {
              enabled: false
          },
          credits: {
              enabled: false
          },
          exporting: {
            filename: 'quantity-of-data-chart',
            buttons: {
              contextButton: {
                menuItems: [
                  'downloadPNG',
                  'downloadJPEG',
                  'downloadPDF',
                  'downloadSVG'
                ]
              }
            },
            fallbackToExportServer: false
          },
          title: {
              text: '#{{ t(:title_chart_2)}}'
          },
          xAxis: {
              title: {
                  text: '#{{ t(:month) }}'
              },
              categories: #{{ @assessments_per_month[:categories].to_json.html_safe }}
          },
          yAxis: {
              title: {
                  text: '#{{ t(:nr_of_assessments) }}'
              }
          },
          series: #{{ @assessments_per_month[:series].to_json.html_safe }}
      });

      Highcharts.chart('histogram-of-student-performance', {
          chart: {
              type: 'column'
          },
          legend: {
              enabled: false
          },
          credits: {
              enabled: false
          },
          tooltip: {
              valueDecimals: 1
          },
          exporting: {
            filename: 'histogram-performance-chart',
            buttons: {
              contextButton: {
                menuItems: [
                  'downloadPNG',
                  'downloadJPEG',
                  'downloadPDF',
                  'downloadSVG'
                ]
              }
            },
            fallbackToExportServer: false
          },
          title: {
              text: '#{{ t(:title_chart_4)}}'
          },
          xAxis: {
              title: {
                  text: '#{{ t(:performance) }}'
              }
          },
          yAxis: {
              title: {
                  text: '#{{ t(:frequency_perc) }}'
              }
          },
          series: #{{ @student_performance.html_safe }}
      });

      Highcharts.chart('performance-change-by-student', {
          chart: {
              type: 'column'
          },
          legend: {
              enabled: false
          },
          credits: {
              enabled: false
          },
          tooltip: {
              valueDecimals: 1
          },
          exporting: {
            filename: 'performance-change-chart',
            buttons: {
              contextButton: {
                menuItems: [
                  'downloadPNG',
                  'downloadJPEG',
                  'downloadPDF',
                  'downloadSVG'
                ]
              }
            },
            fallbackToExportServer: false
          },
          title: {
              text: '#{{ t(:title_chart_5)}}'
          },
          xAxis: {
              title: {
                  text: '#{{ t(:performance_change) }}'
              }
          },
          yAxis: {
              title: {
                  text: '#{{ t(:frequency_perc) }}'
              }
          },
          series: #{{ @student_performance_change.html_safe }}
      });

      Highcharts.chart('performance-change-by-gender', {
          chart: {
              type: 'column'
          },
          legend: {
              enabled: true
          },
          credits: {
              enabled: false
          },
          tooltip: {
              valueDecimals: 1
          },
          title: {
              text: '#{{ t(:title_chart_6)}}'
          },
          exporting: {
            filename: 'gender-performance-change-chart',
            buttons: {
              contextButton: {
                menuItems: [
                  'downloadPNG',
                  'downloadJPEG',
                  'downloadPDF',
                  'downloadSVG'
                ]
              }
            },
            fallbackToExportServer: false
          },
          xAxis: {
              title: {
                  text: '#{{ t(:performance_change) }}'
              }
          },
          yAxis: {
              title: {
                  text: '#{{ t(:frequency_perc) }}'
              }
          },
          series: #{{ @gender_performance_change.html_safe }}
      });

      Highcharts.chart('average-performance-per-group', {
          chart: {
              type: 'scatter',
              zoomType: 'x'
          },
          legend: {
              enabled: true
          },
          credits: {
              enabled: false
          },
          tooltip: {
            formatter: function () {
              return '<span style="color:' + this.point.color + '">\u25CF</span> ' + this.series.name +
                '<br/><span>x: <span style="font-weight: bold">' + this.point.x + '</span></span>' +
                '<br/><span>y: <span style="font-weight: bold">' + this.point.y + '</span></span>' +
                (this.point.date ? '<br/><span>#{t(:lesson_date)}: ' + this.point.date + '</span>' : '');
            }
          },
          exporting: {
            filename: 'average-performance-chart',
            buttons: {
              contextButton: {
                menuItems: [
                  'downloadPNG',
                  'downloadJPEG',
                  'downloadPDF',
                  'downloadSVG'
                ]
              }
            },
            fallbackToExportServer: false
          },
          title: {
              text: '#{{ t(:title_chart_8)}}'
          },
          xAxis: {
              title: {
                  text: '#{{ t(:nr_of_lessons) }}'
              }
          },
          yAxis: {
              title: {
                  text: '#{{ t(:performance)}}'
              }
          },
          plotOptions: {
            series: {
              events: {
                click: function (e, a1, a2) {
                  if (e.point.lesson_url) {
                    window.open(e.point.lesson_url, '_blank');
                  }
                }
              },
              cursor: 'pointer',
              marker: {
                radius: 2
              }
            }
          },
          series: #{{ @average_group_performance.html_safe }}
      });
  }

  function pollForHighcharts (cb) {
    if (window.Highcharts) {
      cb()
    } else {
      setTimeout(pollForHighcharts.bind(this, cb), 100);
    }
  }

  pollForHighcharts(startAnalytics);
