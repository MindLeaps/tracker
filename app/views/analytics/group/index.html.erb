<% content_for :title, t(:group_analytics).capitalize %>
<% content_for :head_content, javascript_include_tag('analytics') %>
<%= render LayoutComponents::HeaderComponent.new(current_user: current_user, tabs: [
  { title: t(:general_analytics).capitalize, href: general_analytics_url },
  { title: t(:subject_analytics).capitalize, href: subject_analytics_url },
  { title: t(:group_analytics).capitalize, href: '' }
]) do |h| %>
  <% h.with_left do %>
  <% end %>
<% end %>

<div class="overflow-x-scroll">
  <div class="p-4 filter-wrap flex items-center flex-1" data-controller="analytics-filter">
    <div class="pl-2">
      <%= label_tag :organization_label, "Organization", class: 'block text-sm font-medium text-gray-700' %>
      <%= select_tag :organization_select, options_from_collection_for_select(@available_organizations, :id, :organization_name, @selected_organization_id), :class => 'mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md', :prompt => 'All', 'data-analytics-filter-target' => 'select', 'data-action' => 'analytics-filter#updateFilter', 'data-name' => 'organization_id', 'data-dependents' => ['chapter_id'].to_json, 'data-resources' => @available_organizations.map { |o| { id: o.id, label: o.organization_name} }.to_json %>
    </div>
    <div class="pl-2">
      <%= label_tag :chapter_label, "Chapter", class: 'block text-sm font-medium text-gray-700' %>
      <%= select_tag :chapter_select, options_from_collection_for_select(@available_chapters, :id, :chapter_name, @selected_chapter_id), :class => 'mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md', :prompt => 'All', 'data-analytics-filter-target' => 'select', 'data-action' => 'analytics-filter#updateFilter', 'data-name' => 'chapter_id', 'data-resources' => @available_chapters.map { |c| { id: c.id, label: c.chapter_name, depend_id: c.organization_id } }.to_json %>
    </div>
    <div class="pl-2 pt-5">
      <%= render CommonComponents::ButtonComponent.new(label: t(:filter), options: { 'data-analytics-filter-target' => 'anchor' })%>
    </div>
  </div>

  <div class="grid gap-2" style="grid-template-columns: repeat(2, minmax(min-content, 50%))">
    <% @group_series.each_slice(2) do |d1, d2| %>
      <div id="group-<%= d1[:group] %>" class="w-full h-96"></div>
      <% if d2 %>
        <div id="group-<%= d2[:group] %>" class="w-full h-96"></div>
      <% end %>
    <% end %>
  </div>
</div>

<script>
  function startAnalytics() {
    var datasets = <%= @group_series.to_json.html_safe %>;

    datasets.forEach(function(dataset) {
      new Highcharts.Chart({
        chart: {
            renderTo: 'group-' + dataset.group,
            zoomType: 'x',
            type: 'scatter'
        },
        exporting: {
          filename: dataset.group + '-chart',
          buttons: {
            contextButton: {
              menuItems: [
                'downloadPNG',
                'downloadJPEG',
                'downloadPDF',
                'downloadSVG'
              ]
            }
          },
          fallbackToExportServer: false
        },
        title: {
            text: dataset.group
        },
        credits: {
            enabled: false
        },
        tooltip: {
          formatter: function () {
            return '<span style="color:' + this.point.color + '">\u25CF</span> ' + this.series.name +
              '<br/><span>x: <span style="font-weight: bold">' + this.point.x + '</span></span>' +
              '<br/><span>y: <span style="font-weight: bold">' + this.point.y + '</span></span>' +
              (this.point.grade_count ? '<br/><span>#{t(:grades)}: ' + this.point.grade_count + '</span>' : '') +
              (this.point.date ? '<br/><span>#{t(:lesson_date)}: ' + this.point.date + '</span>' : '');
          }
        },
        xAxis: {
            allowDecimals: false,
            title: {
                text: '<%= t(:nr_of_lessons) %>'
            }
        },
        yAxis: {
            allowDecimals: false,
            title: {
                text: '<%= t(:performance) %>'
            }
        },
        legend: {
            enabled: false
        },
        plotOptions: {
            series: {
                events: {
                  click: function (e, a1, a2) {
                    if (e.point.lesson_url) {
                      window.open(e.point.lesson_url, '_blank');
                    }
                  }
                },
                marker: {
                    radius: 2
                }
            }
        },
        series: dataset.series
    });
  });
  }

  function pollForHighcharts(cb) {
    if (window.Highcharts) {
      cb()
    } else {
      setTimeout(pollForHighcharts.bind(this, cb), 100);
    }
  }

  pollForHighcharts(startAnalytics);
</script>
