- content_for :title, "#{t(:user)} - #{@user.email}"

- content_for :header_content do
  = render partial: '/shared/header_content', locals: { back_button_url: users_path, back_tooltip: 'Back to Users', title: user_name(@user) }

- content_for :header_actions do
  - if policy(@user).destroy?
    = render partial: '/shared/delete_dialog', locals: { target: @user, content: t(:delete_confirmation_text) }
    button#delete-dialog-button.mdl-button.mdl-js-button.mdl-button--icon
      = inline_svg_tag 'delete.svg'
      .mdl-tooltip data-mdl-for='delete-dialog-button' #{t(:delete_user)}

javascript:
  document.querySelector('#delete-dialog-button').addEventListener('click', function() {
    document.querySelector('#delete-dialog').showModal();
  });

.mdl-cell.mdl-cell--4-col
  .mdl-card.mdl-shadow--2dp.user-profile-card
    .mdl-card__title.primary
      = image_tag user_image(@user, 300), class: 'profile-image'
      br
      h2.mdl-card__title-text = user_name @user
    .mdl-card__supporting-text
      ul
        li Email: #{@user.email}
        - if policy(@user).create_api_token?
          li API Token: #{@token} #{button_to(t(:create_api_token), create_api_token_user_path(@user), class: 'mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect button--danger')}

      h4 Global role:
      - if @user.global_role?
        p #{@user.roles.global.first.label}
      - else
        p No Global Role
      h4 Organization Roles:
      ul
        - @user.roles.includes(:resource).instance_scoped(Organization).each do |role|
          li #{role.resource.organization_name}: #{Role::LOCAL_ROLES[role.name.to_sym]}

- if @user.id != current_user.id && policy(@membership).update_global_role?
  .mdl-cell.mdl-cell--4-col
    .mdl-card.mdl-shadow--2dp.role-administration-card
      .mdl-card__title.primary
        h2.mdl-card__title-text Global Roles
      = simple_form_for @membership, url: update_global_role_user_memberships_path(@user), as: 'global-role-form', method: :put, html: { id: "user-roles-global" } do |f|
        / = f.input :role, as: :radio_buttons, collection: Role::GLOBAL_ROLES.invert
        .mdl-card__supporting-text
          - Role::GLOBAL_ROLES.each do |role_value, role_name|
            label class='mdl-radio mdl-js-radio mdl-js-ripple-effect global-role-radio'
              = radio_button_tag role_value, role_value.to_s, user_global_role(@user) == role_value, name: "role", class: "mdl-radio__button"
              span class='mdl-radio__label' = role_name
        <div class="mdl-card__actions mdl-card--border role-actions">
          = f.button :submit, t(:update_global_role_button), class: 'mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect'
      = button_to t(:revoke_global_role_button), revoke_global_role_user_memberships_path(@user), method: :delete, class: 'mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect button--danger' if @user.global_role?
      </div>
  .mdl-cell.mdl-cell--4-col
    .mdl-card.mdl-shadow--2dp.role-administration-card
      .mdl-card__title.primary
        h2.mdl-card__title-text Organization Roles
      - current_user.organizations.each do |org|
        - if policy(Membership.new(user: @user, org: org)).update?
          = simple_form_for @membership, url: user_membership_path(@user, org), method: :put, html: { id: "user-roles-for[#{org.id}]" } do |f|
            .mdl-card__supporting-text
              h4 = org.organization_name
              - Role::LOCAL_ROLES.each do |role_value, role_name|
                label class='mdl-radio mdl-js-radio mdl-js-ripple-effect global-role-radio'
                  = radio_button_tag role_value, role_value.to_s, @user_roles[org.id] == role_value, name: "role", class: "mdl-radio__button"
                  span class='mdl-radio__label' = role_name
            <div class="mdl-card__actions mdl-card--border role-actions">
              = f.button :submit, t(:update_role_button), class: 'mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect'
          = button_to t(:revoke_local_role_button, org: org.organization_name), user_membership_path(@user, org), method: :delete, class: 'mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect button--danger' if @user.member_of?(org)
          </div>
