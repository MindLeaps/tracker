---
- name: Add apt key for yarn
  apt_key:
    url: https://dl.yarnpkg.com/debian/pubkey.gpg
    state: present

- name: Add apt repository for yarn
  apt_repository:
    repo: deb https://dl.yarnpkg.com/debian/ stable main
    state: present
    filename: yarn
    update_cache: yes

- name: Update apt repository cache
  become: yes
  apt:
    update_cache: yes

- name: Install required packages
  become: yes
  apt: pkg={{ item }} state=present
  with_items:
    - apt-transport-https
    - build-essential
    - curl
    - git
    - git-core
    - libcurl4-openssl-dev
    - libgmp3-dev
    - libpq-dev
    - libreadline-dev
    - libssl-dev
    - libxml2-dev
    - libxslt1-dev
    - libyaml-dev
    - nginx-extras
    - zlib1g-dev
    - nodejs
    - imagemagick
    - jpegoptim
    - optipng
    - yarn

  # LetsEncrypt setup, these must happen in order and should only happen on
  # very first deploy
- name: Check if SSL cert has been installed
  shell: "test ! -e {{ ssl_certificate }}"
  register: obtain_letsencrypt_cert
  ignore_errors: True

- name: Install letsencrypt challenge nginx config
  become: yes
  template:
    src: letsencrypt-nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  when: obtain_letsencrypt_cert

- name: Restart Nginx for letsencrypt challenge
  service: name=nginx state=restarted
  when: obtain_letsencrypt_cert

- name: Install Certbot
  get_url:
    url: https://dl.eff.org/certbot-auto
    dest: /etc/certbot-auto
    mode: a+x

- name: Get SSL Certificate
  become: yes
  shell: "/etc/certbot-auto certonly -n -m {{ letsencrypt_email }} --agree-tos --webroot -w /home/mindleaps/tracker/public -d {{ deploy_domain }}"
  args:
    creates: "{{ ssl_certificate }}"

- name: Renew SSL Certificate
  shell: "/etc/certbot-auto renew"

- name: Setup the cronjob for SSL Certificate renewal
  cron:
    name: "Renew SSL Certificate"
    minute: 1
    hour: 0
    job: "/etc/certbot-auto renew && systemctl restart nginx"

  # Full nginx config serving SSL and forwarding to the app
- name: Install nginx config
  become: yes
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf
  notify: Reload nginx config

- name: Install rvm dependencies
  become: yes
  apt: pkg={{ item }} update_cache=yes state=present
  with_items:
    - automake
    - bison
    - libffi-dev
    - libgdbm-dev
    - libncurses5-dev
    - libtool

- name: Create the mindleaps user
  become: yes
  user: name=mindleaps

- name: Trust RVM public key
  become: yes
  become_user: mindleaps
  shell: "\\gpg --keyserver hkp://keys.gnupg.net --recv-keys 7D2BAF1CF37B13E2069D6956105BD0E739499BDB"

- name: Get rvm
  become: yes
  become_user: mindleaps
  shell: "\\curl -L https://get.rvm.io | bash -s stable --ignore-dotfiles"
  args:
    creates: "/home/mindleaps/.rvm"

- name: Update rvm
  become: yes
  become_user: mindleaps
  shell: ~/.rvm/bin/rvm get stable

- name: Dont install documentation with gems
  become: yes
  become_user: mindleaps
  command: 'echo "gem: --no-ri --no-rdoc" > ~/.gemrc creates=~/.gemrc'

- name: Add rvm to bashrc
  become: yes
  become_user: mindleaps
  lineinfile:
    dest="~/.bashrc"
    state=present
    line="source ~/.rvm/scripts/rvm"
    insertafter=EOF

- name: Copy the source to the machine
  become: yes
  become_user: mindleaps
  synchronize:
    dest: /home/mindleaps/tracker
    src: ../../../../
    delete: yes
    owner: no
    group: no
    rsync_opts:
      - "--exclude=.DS_Store"
      - "--exclude=.git"
      - "--exclude=.gitignore"
      - "--exclude=.rspec"
      - "--exclude=.rubocop.yml"
      - "--exclude=.travis.yml"
      - "--exclude=deploy"
      - "--exclude=spec"
      - "--exclude=db/*.sqlite3"
      - "--exclude=log"
      - "--exclude=tmp"

- name: Change ownership of destination directory
  become: yes
  become_user: root
  shell: chown -R mindleaps:mindleaps /home/mindleaps/tracker

- name: Grant the rails app access to tmp
  become: yes
  file: dest=/home/mindleaps/tracker/tmp owner=mindleaps group=mindleaps mode=0700 state=directory recurse=yes

- name: Install database config
  become: yes
  template: src=database.yml.j2 dest=/home/mindleaps/tracker/config/database.yml
  notify: Restart tracker

- name: Install libs required by RVM
  become: yes
  shell: /home/mindleaps/.rvm/bin/rvm --autolibs=enabled requirements .
  args:
    chdir: /home/mindleaps/tracker

- name: Install the ruby version needed by mindleaps
  become: yes
  become_user: mindleaps
  shell: ~/.rvm/bin/rvm install `cat ~/tracker/.ruby-version`
  args:
    chdir: /home/mindleaps/tracker

- name: Install Bundler
  become: yes
  become_user: mindleaps
  shell: ~/.rvm/bin/rvm . do gem install bundler
  args:
    chdir: /home/mindleaps/tracker

- name: Update Rubygems
  become: yes
  become_user: mindleaps
  shell: ~/.rvm/bin/rvm . do rvm rubygems latest
  args:
      chdir: /home/mindleaps/tracker

- name: Install all gems
  become: yes
  become_user: mindleaps
  shell: ~/.rvm/bin/rvm . do bundle install
  args:
    chdir: /home/mindleaps/tracker

- name: Migrate the Database
  become: yes
  become_user: mindleaps
  shell: SECRET_KEY_BASE={{ secret_key_base }} DEVISE_SECRET_KEY={{ devise_secret_key }} RAILS_ENV=production ~/.rvm/bin/rvm . do rake db:migrate
  args:
    chdir: /home/mindleaps/tracker

- name: Reset Postgres sequences of table primary key ids
  become: yes
  become_user: mindleaps
  shell: SECRET_KEY_BASE={{ secret_key_base }} DEVISE_SECRET_KEY={{ devise_secret_key }} RAILS_ENV=production ~/.rvm/bin/rvm . do rake db:correct_sequence_ids
  args:
    chdir: /home/mindleaps/tracker

- name: Precompile the assets
  become: yes
  become_user: mindleaps
  shell: SECRET_KEY_BASE={{ secret_key_base }} DEVISE_SECRET_KEY={{ devise_secret_key }} RAILS_ENV=production ~/.rvm/bin/rvm . do rake assets:precompile
  args:
    chdir: /home/mindleaps/tracker

- name: Install rsyslog config
  become: yes
  template: src=tracker.rsyslog.conf.j2 dest=/etc/rsyslog.d/mindleaps-tracker.conf

- name: Restart rsyslog
  become: yes
  service: name=rsyslog state=restarted

- name: Install the systemd script for tracker
  become: yes
  template: src=tracker.service.j2 dest=/etc/systemd/system/tracker.service
  notify: Restart tracker

- name: Start tracker
  become: yes
  service: name=tracker state=started

- name: Install Datadog nginx config
  become: yes
  template: src=datadog.nginx.yaml.j2 dest=/etc/datadog-agent/conf.d/nginx.yaml

- name: Ensures datadog conf.d/ruby.d dir exists
  file: path=/etc/datadog-agent/conf.d/ruby.d state=directory

- name: Install Datadog ruby config
  become: yes
  template: src=datadog.ruby.yaml.j2 dest=/etc/datadog-agent/conf.d/ruby.d/conf.yaml

- name: Restart Datadog Service
  systemd:
    state: restarted
    name: datadog-agent.service

- name: Install Filebeat config
  become: yes
  template: src=filebeat.yml.j2 dest=/etc/filebeat/filebeat.yml

- name: Restart Filebeat Service
  systemd:
    state: restarted
    name: filebeat.service
