---
- name: Install custom pg_hba.conf
  template:
    src: pg_hba.conf.j2
    dest: /etc/postgresql/9.5/main/pg_hba.conf
  notify: restart postgresql

- name: Install custom postgresql.conf
  template:
    src: postgresql.conf.j2
    dest: /etc/postgresql/9.5/main/postgresql.conf
  notify: restart postgresql

- name: Install .pgpass file
  template:
    src: pgpass.j2
    dest: /var/lib/postgresql/.pgpass
    owner: postgres
    mode: '0600'
  notify: restart postgresql

- name: Install custom recovery.conf
  template:
    src: recovery.conf.j2
    dest: /mnt/data/db/recovery.conf
  notify: restart postgresql

- name: Install Pip
  apt:
    name: python-pip
    state: present

- name: Install AWS CLI
  pip:
    name: awscli

- name: Create .aws directory
  become: yes
  become_user: postgres
  file:
    owner: postgres
    path: ~/.aws
    state: directory
    mode: 0700

- name: Install AWS Credentials
  become: yes
  become_user: postgres
  template:
    src: aws_credentials.j2
    dest: ~/.aws/credentials

- name: Creates the backup directory
  file:
    owner: postgres
    path: /mnt/data/backups
    state: directory
    mode: 0766

- name: Copy the backup script
  template:
    src: pg_dump_backup.sh.j2
    dest: /usr/local/bin/pg_dump_backup.sh
    mode: 0755

- name: Install the cron backup script
  cron:
    user: postgres
    name: "Dump Database"
    minute: 0
    hour: "*/3"
    job: "sh /usr/local/bin/pg_dump_backup.sh"

- name: Install Datadog Postgres config
  sudo: true
  template: src=datadog.postgres.yaml.j2 dest=/etc/datadog-agent/conf.d/postgres.yaml

- name: Restart Datadog Service
  systemd:
    state: restarted
    name: datadog-agent.service
